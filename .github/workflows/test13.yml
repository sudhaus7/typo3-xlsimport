name: tests13

on:
  push:
    branches:
      - "master"
  pull_request:
  schedule:
    - cron:  '42 5 * * *'

jobs:
  testsuite:
    name: all tests
    runs-on: ubuntu-22.04
    strategy:
      # This prevents cancellation of matrix job runs, if one or more already failed
      # and let the remaining matrix jobs be executed anyway.
      fail-fast: false
      matrix:
        php: [ '8.2', '8.4' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: Build/Scripts/runTests.sh -t 13 -p ${{ matrix.php }} -s composerUpdate

      - name: Composer validate
        run: Build/Scripts/runTests.sh -t 13 -p ${{ matrix.php }} -s composerValidate

      - name: Lint PHP
        run: Build/Scripts/runTests.sh -t 13 -p ${{ matrix.php }} -s lintPhp

      - name: CGL
        run: Build/Scripts/runTests.sh -t 13 -n -p ${{ matrix.php }} -s cgl -n

      - name: phpstan
        run: Build/Scripts/runTests.sh -t 13 -p ${{ matrix.php }} -s phpstan -- --error-format=github

      - name: Validate rst files
        run: Build/Scripts/runTests.sh -t 13 -n -p ${{ matrix.php }} -s checkRst

      - name: Unit Tests
        run: Build/Scripts/runTests.sh -t 13 -p ${{ matrix.php }} -s unit

      - name: Unit Tests (randomized)
        run: Build/Scripts/runTests.sh -t 13 -p ${{ matrix.php }} -s unitRandom

      - name: Functional Tests with mariadb and mysqli
        run: Build/Scripts/runTests.sh -t 13 -p ${{ matrix.php }} -d mariadb -a mysqli -i 10.4 -s functional

      - name: Functional Tests with mariadb and pdo_mysql
        run: Build/Scripts/runTests.sh -t 13 -p ${{ matrix.php }} -d mariadb -a pdo_mysql -i 10.6 -s functional

      - name: Functional Tests with mysql and mysqli
        run: Build/Scripts/runTests.sh -t 13 -p ${{ matrix.php }} -d mysql -a mysqli -i 8.0 -s functional

      - name: Functional Tests with mysql and pdo_mysql
        run: Build/Scripts/runTests.sh -t 13 -p ${{ matrix.php }} -d mysql -a pdo_mysql -i 8.4 -s functional

      - name: Functional Tests with postgres
        run: Build/Scripts/runTests.sh -t 13 -p ${{ matrix.php }} -d postgres -i 10 -s functional

      - name: Functional Tests with sqlite
        run: Build/Scripts/runTests.sh -t 13 -p ${{ matrix.php }} -d sqlite -s functional
